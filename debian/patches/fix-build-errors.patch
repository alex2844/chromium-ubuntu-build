Index: beta/cc/trees/frame_rate_estimator.cc
===================================================================
--- beta.orig/cc/trees/frame_rate_estimator.cc
+++ beta/cc/trees/frame_rate_estimator.cc
@@ -47,8 +47,8 @@ void FrameRateEstimator::WillDraw(base::
   // we assume that BeginFrames can not be throttled. But if the animation
   // frequency is lower than that, then using a lower frame rate is permitted.
   // The delta below is to account for minor offsets in frame times.
-  constexpr auto kFudgeDelta = base::TimeDelta::FromMilliseconds(1);
-  constexpr auto kMinDelta =
+  auto kFudgeDelta = base::TimeDelta::FromMilliseconds(1);
+  auto kMinDelta =
       (viz::BeginFrameArgs::DefaultInterval() * 2) + kFudgeDelta;
   if (draw_delta < kMinDelta)
     num_of_consecutive_frames_with_min_delta_++;
Index: beta/media/base/media_serializers.h
===================================================================
--- beta.orig/media/base/media_serializers.h
+++ beta/media/base/media_serializers.h
@@ -378,8 +378,8 @@ template <>
 struct MediaSerializer<base::Location> {
   static base::Value Serialize(const base::Location& value) {
     base::Value result(base::Value::Type::DICTIONARY);
-    FIELD_SERIALIZE("file", value.file_name());
-    FIELD_SERIALIZE("line", value.line_number());
+    FIELD_SERIALIZE("file", value.file_name() ? value.file_name() : "unknown");
+    FIELD_SERIALIZE("line", value.line_number() ? value.line_number() : 0);
     return result;
   }
 };
