Index: dev/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
===================================================================
--- dev.orig/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
+++ dev/media/gpu/vaapi/vaapi_video_decode_accelerator.cc
@@ -678,6 +678,7 @@ void VaapiVideoDecodeAccelerator::Assign
   // internal decoded frame.
   if (buffer_allocation_mode_ != BufferAllocationMode::kNone &&
       buffer_allocation_mode_ != BufferAllocationMode::kWrapVdpau &&
+      IsProfileSupported(kVideoProcess, VAProfileNone) &&
       !vpp_vaapi_wrapper_) {
     vpp_vaapi_wrapper_ = VaapiWrapper::Create(
         VaapiWrapper::kVideoProcess, VAProfileNone,
@@ -710,7 +711,8 @@ void VaapiVideoDecodeAccelerator::Assign
 
     std::unique_ptr<VaapiPicture> picture = vaapi_picture_factory_->Create(
         ((buffer_allocation_mode_ == BufferAllocationMode::kNone) ||
-         (buffer_allocation_mode_ == BufferAllocationMode::kWrapVdpau))
+         (buffer_allocation_mode_ == BufferAllocationMode::kWrapVdpau)) &&
+        IsProfileSupported(kVideoProcess, VAProfileNone)
             ? vaapi_wrapper_
             : vpp_vaapi_wrapper_,
         make_context_current_cb_, bind_image_cb_, buffer, size_to_bind);
@@ -1164,6 +1166,11 @@ VaapiVideoDecodeAccelerator::GetSupporte
   return VaapiWrapper::GetSupportedDecodeProfiles();
 }
 
+bool VaapiVideoDecodeAccelerator::IsProfileSupported(VaapiWrapper::CodecMode mode, VAProfile va_profile) {
+  return VASupportedProfiles::Get().IsProfileSupported(
+          mode, va_profile, NULL);
+}
+
 VaapiVideoDecodeAccelerator::BufferAllocationMode
 VaapiVideoDecodeAccelerator::DecideBufferAllocationMode() {
   // NVIDIA blobs use VDPAU
Index: dev/media/gpu/vaapi/vaapi_video_decode_accelerator.h
===================================================================
--- dev.orig/media/gpu/vaapi/vaapi_video_decode_accelerator.h
+++ dev/media/gpu/vaapi/vaapi_video_decode_accelerator.h
@@ -217,6 +217,8 @@ class MEDIA_GPU_EXPORT VaapiVideoDecodeA
   BufferAllocationMode DecideBufferAllocationMode();
   bool IsBufferAllocationModeReducedOrSuperReduced() const;
 
+  bool IsProfileSupported(VaapiWrapper::CodecMode mode, VAProfile va_profile);
+
   // VAVDA state.
   enum State {
     // Initialize() not called yet or failed.
